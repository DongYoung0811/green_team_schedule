<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.team.mapper.ScheduleMapper">

	<!-- 달력 출력용 고객DB 전체 불러오기 -->
	<select id="getList" resultType="org.team.dto.ReservationDTO">
	<![CDATA[
	select * from customer where rnum > 0
	]]>
	</select>

	<!-- 처리현황 데이터 조회 SQL -->
	<select id="getStatusList"
		resultType="org.team.dto.ReservationDTO">
    	<![CDATA[
	   SELECT 
	        rnum, 
	        rdate, 
	        cname, 
	        CASE 
	            WHEN NOW() < visitdate THEN 'A/S 전'
	            WHEN NOW() >= visitdate AND NOW() < visitdate_end THEN 'A/S 중'
	            ELSE 'A/S 완료'
	        END AS processStatus,
	        visitdate_end
	    FROM customer;
   		]]>
	</select>

	<select id="reservationRead" parameterType="long"
		resultType="org.team.dto.ReservationDTO">
	
	<![CDATA[
	SELECT * FROM customer WHERE rnum = #{rnum} 
	]]>
	</select>


	<!-- Service Mapper -->
	<!-- 전체 일정 조회 -->
	<select id="selectAll" resultType="org.team.dto.BoardDTO">
		SELECT * FROM schedule;
	</select>

	<!-- 페이징 처리된 일정 조회 -->
	<select id="selectAllWithPagination"
		resultType="org.team.dto.BoardDTO">
		SELECT * FROM schedule
		LIMIT #{offset}, #{size};
	</select>

	<!-- 특정 일정 조회 (rnum 기준) -->
	<select id="selectScheduleById" parameterType="int"
		resultType="org.team.dto.BoardDTO">
		SELECT * FROM schedule
		WHERE rnum = #{rnum};
	</select>

	<!-- 제목으로 일정 조회 -->
	<select id="selectByTitle" parameterType="string"
		resultType="org.team.dto.BoardDTO">
		SELECT * FROM schedule
		WHERE title LIKE CONCAT('%', #{title}, '%');
	</select>

	<!-- 날짜로 일정 조회 -->
	<select id="selectByDate" parameterType="string"
		resultType="org.team.dto.BoardDTO">
		SELECT * FROM schedule
		WHERE date = #{date};
	</select>

	<!-- 일정 추가 -->
	<insert id="insertSchedule"
		parameterType="org.team.dto.BoardDTO">
		INSERT INTO schedule (title, date, description)
		VALUES (#{title}, #{date}, #{description});
	</insert>

	<!-- 특정 일정 삭제 (rnum 기준) -->
	<delete id="deleteScheduleById" parameterType="int">
		DELETE FROM schedule
		WHERE rnum = #{rnum};
	</delete>

	<!-- 날짜로 일정 삭제 -->
	<delete id="deleteByDate" parameterType="string">
		DELETE FROM schedule
		WHERE date = #{date};
	</delete>

	<!-- 제목으로 일정 삭제 -->
	<delete id="deleteByTitle" parameterType="string">
		DELETE FROM schedule
		WHERE title LIKE CONCAT('%', #{title}, '%');
	</delete>

	<!-- 일정 업데이트 -->
	<update id="updateSchedule" parameterType="map">
		<choose>
			<when test="column == 'title'">
				UPDATE schedule
				SET title = #{target}
				WHERE rnum = #{dto.rnum};
			</when>
			<when test="column == 'date'">
				UPDATE schedule
				SET date = #{target}
				WHERE rnum = #{dto.rnum};
			</when>
			<otherwise>
				<!-- 예외 처리 -->
				SELECT 0; <!-- 업데이트가 없음을 나타냄 -->
			</otherwise>
		</choose>
	</update>

	<select id="existsScheduleById" resultType="boolean"
		parameterType="int">
		SELECT CASE WHEN COUNT(*) > 0 THEN TRUE ELSE FALSE END
		FROM schedule
		WHERE rnum = #{rnum};
	</select>



</mapper>